<?xml version="1.0"?>

<launch>

  <arg name="spawn_double" default="false"/>
  <arg name="world_name" default="small_city"/>
  <arg name="height" default="15" />
  <arg name="use_beta_bot_localization" default="true"/>

  <!-- Start Gazebo with wg world running in (max) realtime -->
  <include file="$(find beta_bot_gazebo)/launch/load_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
  </include>

  <include file="$(find beacons_gazebo)/launch/spawn_beacons.launch">
    <arg name="height" default="$(arg height)" />
  </include>

  <!-- Spawn simulated quadrotor uav -->
  <include file="$(find beta_bot_gazebo)/launch/spawn_quadrotor.launch"/>

  <!-- Launch RSSI Beacons -->
  <node name="rssi_to_distance" pkg="beacons_gazebo" type="rssi_to_distance" output="screen"/>

  <!-- LANZAMIENTO DE LA ODOMETRÍA VISUAL POR CÁMARA ESTÉREO -->
  <!-- <include file="$(find beta_bot_localization)/launch/stereo_odometry.launch" /> -->
  <node name="stereo_odometry_launcher" pkg="beta_bot_localization" type="stereoLaunch.sh" output="screen"/>


  <!-- OCTOMAP_SERVER: NODO PARA CARGAR MAPAS 3D EN LA SIMULACIÓN. EN NUESTRO CASO, EL global_map PARA VISUALIZACIÓN -->
  <!-- <arg name="map_file" default="$(find beta_bot_localization)/maps/mapfile.bt"/> -->
  <!-- Ubicación en la que hemos almacenado el mapa tras el VSLAM con rtabmap: ejecutar -->
  <!-- "rosrun octomap_server octomap_saver -f mapfile.bt" -->
  <!-- <node name="octomap_server_node" pkg="octomap_server" type="octomap_server_node" args="$(arg map_file)"> -->
  <!-- <param name="frame_id" value="world" /> -->
  <!-- <remap from="/octomap_full" to="/octomap/octomap_full" /> -->
  <!-- <remap from="/octomap_binary" to="/octomap/octomap_binary" /> -->
  <!-- </node> -->

  <!-- Launch selected localization node -->
  <group if="$(arg use_beta_bot_localization)">
    <include file="$(find beta_bot_localization)/launch/beta_bot_localization.launch"/>
  </group>
  <group unless="$(arg use_beta_bot_localization)">
    <!-- <include file="$(find beta_bot_localization)/launch/robot_localization.launch"/> -->
    <node name="robot_localization_launcher" pkg="beta_bot_localization" type="robotLocalizationLaunch.sh" output="screen"/>
  </group>

  <!-- Start rviz visualization with preset config -->
  <!-- <node pkg="rviz" type="rviz" name="rviz" args="-d $(find beta_bot_bringup)/rviz_cfg/outdoor_flight.rviz"/> -->
  <node name="rviz_launcher" pkg="beta_bot_localization" type="rvizLaunch.sh" output="screen"/>

</launch>

